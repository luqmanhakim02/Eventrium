#pragma version 6

// Define application mode for create and join events
txn ApplicationID
int 0
==
bnz create_event

// Handle event creation
create_event:
    // Create an event struct with event details
    byte "Event Name: "
    byte ""
    byte "Event Date: "
    byte ""
    byte "Event Price: "
    byte ""
    byte "Event Description: "
    byte ""
    concat
    txn ApplicationID
    itob
    concat
    txn ApplicationID
    itob
    concat
    txn ApplicationID
    itob
    concat
    txn ApplicationID
    itob
    concat

    // Mark the call as successful
    int 1
    return

// Handle event joining
txn ApplicationID
int 1
==
bnz join_event

join_event:
    // Load event ID from the call data
    byte "Event ID: "
    concat
    txn ApplicationID
    itob

    // Check if the event ID exists in the local state
    app_local_get

    // If the event ID exists, allow the user to join
    int 0
    bnz event_exists

    // Event does not exist
    int 0
    return

event_exists:
    // Load event details from the application local state
    byte "Event Name: "
    app_local_get
    byte "Event Date: "
    app_local_get
    byte "Event Price: "
    app_local_get
    byte "Event Description: "
    app_local_get

    // Check if the payment amount is sufficient
    int 0
    txn Amount
    >=
    bnz payment_sufficient

    // Payment is insufficient
    int 0
    return

payment_sufficient:
    // Payment is sufficient, allow the user to join
    int 1
    return
